/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package security;

import java.awt.event.ItemEvent;
import java.io.BufferedWriter;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import conn.BasicAuth;
import conn.FormLogin;

/**
 *
 * @author KIT376
 */
public class RequestEditor extends javax.swing.JFrame {

    /**
     * Creates new form RequestEditor
     */
    public RequestEditor() {
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        httpResponse = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        httpRequest = new javax.swing.JEditorPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        postEditorPane = new javax.swing.JEditorPane();
        jPanel2 = new javax.swing.JPanel();
        reset = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        url = new javax.swing.JTextField();
        methodType = new javax.swing.JComboBox();

        setTitle("Request Editor");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Result Details"));

        httpResponse.setEditable(false);
        httpResponse.setColumns(20);
        httpResponse.setRows(5);
        jScrollPane3.setViewportView(httpResponse);

        jScrollPane1.setViewportView(httpRequest);

        jLabel2.setText("RESPONSE");

        jLabel1.setText("REQUEST HEADERS");

        postEditorPane.setToolTipText("");
        jScrollPane2.setViewportView(postEditorPane);

        reset.setText("RESET");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        saveButton.setText("SAVE");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        exitButton.setText("EXIT");
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(139, 139, 139))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jScrollPane3))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Connection Details"));

        jButton1.setText("SEND");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        methodType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Post", "Get" }));
        methodType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                methodTypeItemStateChanged(evt);
            }
        });
        methodType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                methodTypeActionPerformed(evt);
            }
        });
        methodType.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                methodTypePropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(methodType, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(methodType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void setPostEditorPane(JEditorPane postEditorPane) {
        //this.postEditorPane = postEditorPane;
        
      
        
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                
        String postParam=new String();  
        
         if(url.getText().startsWith("http://") || url.getText().startsWith("https://") || url.getText().startsWith("www.") )
        {
        try{
                URL obj = new URL(url.getText());
		HttpURLConnection con = (HttpURLConnection) obj.openConnection();
		//add reuqest header
		con.setRequestMethod("GET");
                con.setDoOutput(true);
                con.setDoInput(true);
            //    con.setRequestProperty("HOST", "localhost:8080");
               String req=  httpRequest.getText();
               StringTokenizer stkr = new StringTokenizer(req,"\n");
              // System.out.println("No of tokens in stkr:"+stkr.countTokens());
               
                            
               while (stkr.hasMoreElements()) {
                   
                   int indexPos;
                   String token=stkr.nextElement().toString();
                   indexPos = token.indexOf(':');
                   
                   String key;
                   String value;
                   key=token.substring(0, indexPos);
                   value=token.substring(indexPos+1);
                   
		//System.out.println(key +" >>>> " +value);
                                  
                   con.setRequestProperty(key,value);
		}
               
               DataOutputStream wr = new DataOutputStream(con.getOutputStream());
               
               postParam=postEditorPane.getText();
               if(postParam.length()>0)
               {
                  System.out.println("postParam:::"+postParam);
                   wr.writeBytes(postParam);
               }    
               
		//wr.writeBytes(urlParameters);
		wr.flush();
		wr.close();
                
                StringBuffer strBuffer=new StringBuffer();
                
                
                Map<String, List<String>> headers = con.getHeaderFields();
                Set<Map.Entry<String, List<String>>> entrySet = headers.entrySet();
                for (Map.Entry<String, List<String>> entry : entrySet) {
                String headerName = entry.getKey();
                
                System.out.println("Header Name:" + headerName);
                List<String> headerValues = entry.getValue();
                for (String value : headerValues) {
                
                    strBuffer.append(headerName + ":" + value + "\n");
                    System.out.print("Header value:" + value);
                }
               System.out.println();
        }
                
                httpResponse.setText(strBuffer.toString());
               // con.getHeaderFields();
               
            
               
               
          
             //  System.out.println(req);
                
            }catch (Exception e){
              e.printStackTrace();
            }  }

         else
         {
             JOptionPane.showMessageDialog(this, "Enter a proper URL ex: http://google.com","Invalid URL",0);
         }
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked

 int option = JOptionPane.showOptionDialog( 
                    this,  
                    "Are you sure you want to exit?",  
                    "Exit Dialog", JOptionPane.YES_NO_OPTION,  
                    JOptionPane.WARNING_MESSAGE, null, null,  
                    null );  
            if( option == JOptionPane.YES_OPTION ) {  
                System.exit( 0 );  
            }          
// TODO add your handling code here:
    }//GEN-LAST:event_exitButtonMouseClicked

    private void methodTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_methodTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_methodTypeActionPerformed

    private void methodTypePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_methodTypePropertyChange

        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_methodTypePropertyChange

    private void methodTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_methodTypeItemStateChanged

       if (evt.getStateChange() == ItemEvent.SELECTED) {
          Object item = evt.getItem();
          
          System.out.println("Item Selected :"+item.toString());
          
          if(item.toString()=="Get")
          {
              postEditorPane.setVisible(false);
          }  
          else
              postEditorPane.setVisible(true);
              
          // do something with object
       }
        

// TODO add your handling code here:
    }//GEN-LAST:event_methodTypeItemStateChanged

    private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked

    StringBuffer strSave= new StringBuffer();
    FileOutputStream fos = null;
    FileWriter fileWriter=null;
    JFileChooser jFileChooser=null;
    File fileToSave=null;
    
           
    strSave.append("############ Request Headers Below ############\n"+httpRequest.getText());
    strSave.append("\n###############################################\n");
    
    String postParam=postEditorPane.getText();
        if(postParam.length()>0)
        {
          strSave.append(postParam+"\n");
        }  
    strSave.append("############ Response Headers Below ############\n"+httpResponse.getText());
    
      try
    {
    
     jFileChooser = new JFileChooser();
     int userSelection = jFileChooser.showSaveDialog(null);
 
     if (userSelection == JFileChooser.APPROVE_OPTION) {
     fileToSave = jFileChooser.getSelectedFile();
     System.out.println("Save as file: " + fileToSave.getAbsolutePath());
     }
      fileWriter=new FileWriter(fileToSave.toString());
    fileWriter.write(strSave.toString());
    }
    
     catch(Exception ex)
    {
     ex.printStackTrace();
        
    }
    
    finally
    {
        try {
            fileWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(RequestEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }
 
// TODO add your handling code here:
    }//GEN-LAST:event_saveButtonMouseClicked

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed

        postEditorPane.setText("");
        url.setText("");
        httpResponse.setText("");
        httpRequest.setText("");
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_resetActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        
    StringBuffer strSave= new StringBuffer();
    FileOutputStream fos = null;
    FileWriter fileWriter=null;
    JFileChooser jFileChooser=null;
    File fileToSave=null;
    
           
    strSave.append("############ Result Below ############\n"+httpRequest.getText());
    strSave.append("\n####################################\n");
    
    strSave.append("############ Message Below ############\n"+httpResponse.getText());
    
      try
    {
    
     jFileChooser = new JFileChooser();
     int userSelection = jFileChooser.showSaveDialog(null);
 
     if (userSelection == JFileChooser.APPROVE_OPTION) {
     fileToSave = jFileChooser.getSelectedFile();
     System.out.println("Save as file: " + fileToSave.getAbsolutePath());
     }
      fileWriter=new FileWriter(fileToSave.toString());
    fileWriter.write(strSave.toString());
    }
    
     catch(Exception ex)
    {
     ex.printStackTrace();
        
    }
    
    finally
    {
        try {
            fileWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(RequestEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }    
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        
        int option = JOptionPane.showOptionDialog(
                this,
                "Do you want to close the screen?",
                "Close Dialog", JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE, null, null,
                null);
        if (option == JOptionPane.YES_OPTION) {
            this.setVisible(false);

           
        }
        
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RequestEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RequestEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RequestEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RequestEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                System.out.println("Inside Run");
                new RequestEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitButton;
    private javax.swing.JEditorPane httpRequest;
    private javax.swing.JTextArea httpResponse;
    private javax.swing.JButton jButton1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox methodType;
    private javax.swing.JEditorPane postEditorPane;
    private javax.swing.JButton reset;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField url;
    // End of variables declaration//GEN-END:variables
}
