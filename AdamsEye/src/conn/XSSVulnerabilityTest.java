package conn;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;

import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.StringTokenizer;
import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class XSSVulnerabilityTest {

    private List<String> cookies;
    private static HttpURLConnection conn;
    private static URL obj = null;
    public static String sessionid = "";
    public static Map<String, String> loginCookies = null;
    public static String relUrl = "";

    public static void main(String[] args) throws Exception {

        String url = "http://localhost:8080/insecure/admin/activateAccount.jsp";

        XSSVulnerabilityTest http = new XSSVulnerabilityTest();
        boolean isXssVulnerable = http.testXSS(url);
        System.out.println("isXssVulnerable==" + isXssVulnerable);

    }

    public boolean testXSS(String url) {

        try {

            Connection.Response getRes1 = Jsoup.connect(url).method(Connection.Method.GET).execute();
            loginCookies = getRes1.cookies();
            Document document = getRes1.parse();
            ArrayList<String> inputParams = getFormParams(document);
            
            if(inputParams==null) 
                return false;
            
            String vector = "=adamtokens'%20-->\">'>'\\";
            String temp;
            for(String param : inputParams){
                temp = param + vector;
                Connection.Response response = Jsoup.connect(url + "?" + temp).method(Connection.Method.GET).cookies(loginCookies).execute();
                if(response.parse().html().contains("adamtokens")){
                    return true;
                }
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }

        return false;

    }

    public static ArrayList<String> getFormParams(Document doc)
            throws Exception {

        System.out.println("Extracting form's data...");
        Elements forms = doc.getElementsByTag("form");
        
        if(forms.isEmpty()){
            System.out.println("No input Form");
            return null;
        }
        
        Elements inputElements = forms.get(0).getElementsByTag("input");
        Iterator<Element> elementIterator = inputElements.iterator();
        ArrayList<String> al = new ArrayList<>();
        while (elementIterator.hasNext()) {
            al.add(elementIterator.next().attr("name"));
        }
        return al;

    }

}
